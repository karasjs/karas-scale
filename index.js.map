{"version":3,"file":"index.js","sources":["src/index.js"],"sourcesContent":["function seq(from, to, by = 1) {\n  let res = [];\n  for(let i = from; i <= to; i += by) {\n    res.push(i);\n  }\n  return res;\n}\n\nfunction wilkinson(dmin, dmax, m, Q = [ 1, 5, 2, 2.5, 3, 4, 1.5, 7, 6, 8, 9 ], mincoverage = 0.8) {\n  let best = null;\n  let mrange = [];\n  let mrangeA = Math.max(Math.floor(m / 2), 2);\n  let mrangeB = Math.ceil(6 * m);\n  for(let i = mrangeA; i <= mrangeB; i++) {\n    let result = wilkinson_nice_scale(dmin, dmax, i, Q, mincoverage, mrange, m);\n    if(result !== null && (best === null || result.score > best.score)) {\n      best = result;\n    }\n  }\n  return seq(best.lmin, best.lmax, best.lstep);\n}\n\nfunction wilkinson_nice_scale(min, max, k, Q = [ 1, 5, 2, 2.5, 3, 4, 1.5, 7, 6, 8, 9 ], mincoverage = 0.8, mrange = [], m = k) {\n  Q.unshift(10);\n  let range = max - min;\n  let intervals = k - 1;\n  let granularity = 1 - Math.abs(k - m) / m;\n\n  let delta = range / intervals;\n  let base = Math.floor(Math.log10(delta));\n  let dbase = Math.pow(10, base);\n\n  let best = null;\n  for(let i = 1; i <= Q.length; i++) {\n    let tdelta = Q[i] * dbase;\n    let tmin = Math.floor(min / tdelta) * tdelta;\n    let tmax = tmin + intervals * tdelta;\n\n    if(tmin <= min && tmax >= max) {\n      let roundness = 1 - ((i - 1) - (tmin <= 0 && tmax >= 0 ? 1 : 0)) / Q.length;\n      let coverage = (max - min) / (tmax - tmin);\n      if(coverage > mincoverage) {\n        let tnice = granularity + roundness + coverage;\n\n        if(best === null || tnice > best.score) {\n          best = {\n            lmin: tmin,\n            lmax: tmax,\n            lstep: tdelta,\n            score: tnice,\n          };\n        }\n      }\n    }\n  }\n  return best;\n}\n\nexport default wilkinson;\n"],"names":["seq","from","to","by","res","i","push","wilkinson","dmin","dmax","m","Q","mincoverage","best","mrange","mrangeA","Math","max","floor","mrangeB","ceil","result","wilkinson_nice_scale","score","lmin","lmax","lstep","min","k","unshift","range","intervals","granularity","abs","delta","base","log10","dbase","pow","length","tdelta","tmin","tmax","roundness","coverage","tnice"],"mappings":"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"}